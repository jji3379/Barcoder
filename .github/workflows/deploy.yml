name: merlins-beard-server

on:
  push:
    branches:
      [ master, dev ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java JDK
        uses: actions/setup-java@v3.3.0
        with:
          java-version: 11
          distribution: corretto

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: barcoder
          environment_name: merlin-env
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          wait_for_environment_recovery: 300

#      - name: slack success message
#        uses: 8398a7/action-slack@v3
#        if: success() # Pick up events even if the job fails or is canceled.
#        with:
#          status: custom
#          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
#          custom_payload: |
#            {
#              attachments: [{
#                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
#                text: `
#                      --------------------------------------------------------------------------------------- \n
#                      ${process.env.AS_REPO} 저장소의 ${process.env.AS_WORKFLOW} 가 실행 됐습니다. \n
#                      '${process.env.AS_REF}' 브런치에 대한 빌드 및 배포가 완료되었습니다. \n
#                      message : ${process.env.AS_MESSAGE} ( ${process.env.AS_COMMIT} ) \n
#                      workflow 최종 결과 : ${{ job.status }}
#                      `,
#              }]
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#
#
#      - name: slack fail message
#        uses: 8398a7/action-slack@v3
#        if: failure() # Pick up events even if the job fails or is canceled.
#        with:
#          status: custom
#          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
#          custom_payload: |
#            {
#              attachments: [{
#                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
#                text: `
#                      --------------------------------------------------------------------------------------- \n
#                      ${process.env.AS_REPO} 저장소의 ${process.env.AS_WORKFLOW} 가 실행 됐습니다. \n
#                      '${process.env.AS_REF}' 브런치에 대한 빌드 및 배포가 실패했습니다. \n
#                      message : ${process.env.AS_MESSAGE} ( ${process.env.AS_COMMIT} ) \n
#                      workflow 최종 결과 : ${{ job.status }}
#                      `,
#              }]
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#
#      - name: slack cancel message
#        uses: 8398a7/action-slack@v3
#        if: cancelled() # Pick up events even if the job fails or is canceled.
#        with:
#          status: custom
#          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
#          custom_payload: |
#            {
#              attachments: [{
#                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
#                text: `
#                      --------------------------------------------------------------------------------------- \n
#                      ${process.env.AS_REPO} 저장소의 ${process.env.AS_WORKFLOW} 가 실행 됐습니다. \n
#                      '${process.env.AS_REF}' 브런치에 대한 빌드 및 배포가 사용자의 요청에 의해 취소 되었습니다. \n
#                      '취소 시점에따라 서비스가 내려가있는채로 취소 될수 있으니 확인해 주세요 \n
#                      message : ${process.env.AS_MESSAGE} ( ${process.env.AS_COMMIT} ) \n
#                      workflow 최종 결과 : ${{ job.status }}
#                      `,
#              }]
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}